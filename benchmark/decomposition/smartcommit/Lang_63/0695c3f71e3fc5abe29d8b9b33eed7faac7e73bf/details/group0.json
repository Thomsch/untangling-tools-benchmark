FEATURE
feature: Add or modify feature ...
------------
0:0
Update ExpressionStatement "days+=31;" To: "end.add(Calendar.MONTH,-1);".

{
  "relativeFilePath": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
  "startLine": 306,
  "endLine": 306,
  "version": "BASE",
  "contentType": "CODE",
  "codeSnippet": [
    "            days += 31; // such overshooting is taken care of later on"
  ]
}
{
  "relativeFilePath": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
  "startLine": 306,
  "endLine": 312,
  "version": "CURRENT",
  "contentType": "CODE",
  "codeSnippet": [
    "            end.add(Calendar.MONTH, -1);",
    "            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);",
    "//days += 31; // TODO: Need tests to show this is bad and the new code is good.",
    "// HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is ",
    "// 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.",
    "// Also it's contextual - if asked for no M in the format then I should probably ",
    "// be doing no calculating here."
  ]
}
------------
1:0
Add MethodDeclaration "testJiraLang281".

{
  "relativeFilePath": "src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java",
  "startLine": 413,
  "endLine": 412,
  "version": "BASE",
  "contentType": "EMPTY",
  "codeSnippet": []
}
{
  "relativeFilePath": "src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java",
  "startLine": 414,
  "endLine": 436,
  "version": "CURRENT",
  "contentType": "CODE",
  "codeSnippet": [
    "    // https://issues.apache.org/jira/browse/LANG-281",
    "    public void testJiraLang281() {",
    "        Calendar cal = Calendar.getInstance();",
    "        cal.set(Calendar.MONTH, Calendar.DECEMBER);",
    "        cal.set(Calendar.DAY_OF_MONTH, 31);",
    "        cal.set(Calendar.YEAR, 2005);",
    "        cal.set(Calendar.HOUR_OF_DAY, 0);",
    "        cal.set(Calendar.MINUTE, 0);",
    "        cal.set(Calendar.SECOND, 0);",
    "        cal.set(Calendar.MILLISECOND, 0);",
    "",
    "        Calendar cal2 = Calendar.getInstance();",
    "        cal2.set(Calendar.MONTH, Calendar.OCTOBER);",
    "        cal2.set(Calendar.DAY_OF_MONTH, 6);",
    "        cal2.set(Calendar.YEAR, 2006);",
    "        cal2.set(Calendar.HOUR_OF_DAY, 0);",
    "        cal2.set(Calendar.MINUTE, 0);",
    "        cal2.set(Calendar.SECOND, 0);",
    "        cal2.set(Calendar.MILLISECOND, 0);",
    "        String result = DurationFormatUtils.formatPeriod(cal.getTime().getTime(), cal2.getTime().getTime(), \"MM\");",
    "        assertEquals(\"09\", result);",
    "    }",
    ""
  ]
}
------------
0:3
Delete MethodDeclaration "reduceAndCorrect".

{
  "relativeFilePath": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
  "startLine": 430,
  "endLine": 452,
  "version": "BASE",
  "contentType": "CODE",
  "codeSnippet": [
    "    /**",
    "     * Reduces by difference, then if it overshot, calculates the overshot amount and ",
    "     * fixes and returns the amount to change by.",
    "     *",
    "     * @param start Start of period being formatted",
    "     * @param end End of period being formatted",
    "     * @param field Field to reduce, as per constants in {@link java.util.Calendar}",
    "     * @param difference amount to reduce by",
    "     * @return int reduced value",
    "     */",
    "    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {",
    "        end.add( field, -1 * difference );",
    "        int endValue = end.get(field);",
    "        int startValue = start.get(field);",
    "        if (endValue < startValue) {",
    "            int newdiff = startValue - endValue;",
    "            end.add( field, newdiff );",
    "            return newdiff;",
    "        } else {",
    "            return 0;",
    "        }",
    "    }",
    ""
  ]
}
{
  "relativeFilePath": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
  "startLine": 427,
  "endLine": 426,
  "version": "CURRENT",
  "contentType": "EMPTY",
  "codeSnippet": []
}
------------
0:2
Delete ExpressionStatement "milliseconds-=reduceAndCorrect(start,end,Calendar.MILLISECOND,milliseconds);".
Delete ExpressionStatement "seconds-=reduceAndCorrect(start,end,Calendar.SECOND,seconds);".
Delete ExpressionStatement "minutes-=reduceAndCorrect(start,end,Calendar.MINUTE,minutes);".
Delete ExpressionStatement "hours-=reduceAndCorrect(start,end,Calendar.HOUR_OF_DAY,hours);".
Delete ExpressionStatement "days-=reduceAndCorrect(start,end,Calendar.DAY_OF_MONTH,days);".
Delete ExpressionStatement "months-=reduceAndCorrect(start,end,Calendar.MONTH,months);".
Delete ExpressionStatement "years-=reduceAndCorrect(start,end,Calendar.YEAR,years);".

{
  "relativeFilePath": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
  "startLine": 314,
  "endLine": 322,
  "version": "BASE",
  "contentType": "CODE",
  "codeSnippet": [
    "        // take estimates off of end to see if we can equal start, when it overshoots recalculate",
    "        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",
    "        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",
    "        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",
    "        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",
    "        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",
    "        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",
    "        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",
    ""
  ]
}
{
  "relativeFilePath": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
  "startLine": 320,
  "endLine": 319,
  "version": "CURRENT",
  "contentType": "EMPTY",
  "codeSnippet": []
}
------------
0:1
Add MethodInvocation.

{
  "relativeFilePath": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
  "startLine": 307,
  "endLine": 306,
  "version": "BASE",
  "contentType": "EMPTY",
  "codeSnippet": []
}
{
  "relativeFilePath": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
  "startLine": 314,
  "endLine": 314,
  "version": "CURRENT",
  "contentType": "CODE",
  "codeSnippet": [
    "            end.add(Calendar.MONTH, 1);"
  ]
}
