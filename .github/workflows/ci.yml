name: Continuous Integration

on: [push, pull_request, fork]

jobs:

  build:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
        with: 
          repository: Thomsch/untangling-tools-benchmark
          ref: ci
          path: untangling-tools-benchmark     # Relative path under $GITHUB_WORKSPACE to place the repository
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: echo "JAVA11_HOME=$JAVA_HOME" >> $GITHUB_ENV
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/checkout@v3
        with: 
          repository: Thomsch/Flexeme
          path: Flexeme
      - name: set
        run: set | sort
      - name: list directory paths
        run: |
          benchmark="${GITHUB_WORKSPACE}/untangling-tools-benchmark"
          echo $benchmark
          ls -al ${GITHUB_WORKSPACE}
      - name: ls ${HOME}
        run: |
          echo HOME=${HOME}
          ls -al ${HOME}
          find ${HOME}
      - name: install Flexeme dependencies
        run: |
          brew install graphviz
          pip install pygraphviz
          pip install -e ${GITHUB_WORKSPACE}/Flexeme
      - run: cd ${GITHUB_WORKSPACE}/untangling-tools-benchmark
      - name: install Python modules and MacOS dependencies
        run: |
          echo $(pwd)
          pip install -U -r "$benchmark/requirements.txt"
          brew install cpanminus
          brew install wget
          brew install coreutils
      - uses: actions/checkout@v3
        with: 
          repository: rjust/defects4j
          path: defects4j
      - name: install Defects4J
        run: |
          d4j="${GITHUB_WORKSPACE}/defects4j"
          echo $d4j
          cd $d4j
          cpanm --installdeps .
          ./init.sh
      - name: set up environment variables
        run: |
          cd $benchmark
          D4J_EXEC="$d4j/framework/bin"
          export PATH="$D4J_EXEC:$PATH"
          [ -f .env-template ] || (pwd && ls -al && false)
          echo "DEFECTS4J_HOME=$current_path" > .env
          echo "JAVA_11=$JAVA11_HOME/bin/java" >> .env
      - name: check installations and dependencies
        run: |
          cd $benchmark/test
          ./test/check_installation.sh
      - name: run end-to-end tests
        run: |
          export PYTHONHASHSEED=0
          ./test/e2e.sh
