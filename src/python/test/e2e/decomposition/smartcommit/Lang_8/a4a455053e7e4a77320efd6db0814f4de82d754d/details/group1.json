FEATURE
feature: Add or modify feature ...
------------
1:4
Update MethodInvocation.

{
  "relativeFilePath": "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java",
  "startLine": 1130,
  "endLine": 1130,
  "version": "BASE",
  "contentType": "CODE",
  "codeSnippet": [
    "                buffer.append(mStandard);"
  ]
}
{
  "relativeFilePath": "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java",
  "startLine": 1137,
  "endLine": 1137,
  "version": "CURRENT",
  "contentType": "CODE",
  "codeSnippet": [
    "                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));"
  ]
}
------------
2:1
Add MarkerAnnotation.
Add MethodDeclaration "testCalendarTimezoneRespected".
Add VariableDeclarationStatement "availableZones".
Add VariableDeclarationStatement "currentZone".
Add VariableDeclarationStatement "anotherZone".
Add EnhancedForStatement.
Add ExpressionStatement "assertNotNull("Cannot find another timezone",anotherZone);".
Add VariableDeclarationStatement "pattern".
Add VariableDeclarationStatement "cal".
Add VariableDeclarationStatement "sdf".
Add ExpressionStatement "sdf.setTimeZone(anotherZone);".
Add VariableDeclarationStatement "expectedValue".
Add VariableDeclarationStatement "actualValue".
Add ExpressionStatement "assertEquals(expectedValue,actualValue);".

{
  "relativeFilePath": "src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java",
  "startLine": 262,
  "endLine": 261,
  "version": "BASE",
  "contentType": "EMPTY",
  "codeSnippet": []
}
{
  "relativeFilePath": "src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java",
  "startLine": 264,
  "endLine": 287,
  "version": "CURRENT",
  "contentType": "CODE",
  "codeSnippet": [
    "    ",
    "    @Test",
    "    public void testCalendarTimezoneRespected() {",
    "        String[] availableZones = TimeZone.getAvailableIDs();",
    "        TimeZone currentZone = TimeZone.getDefault();",
    "        ",
    "        TimeZone anotherZone = null;",
    "        for (String zone : availableZones) {",
    "            if (!zone.equals(currentZone.getID())) {",
    "                anotherZone = TimeZone.getTimeZone(zone);",
    "            }",
    "        }",
    "        ",
    "        assertNotNull(\"Cannot find another timezone\", anotherZone);",
    "        ",
    "        final String pattern = \"h:mma z\";",
    "        final Calendar cal = Calendar.getInstance(anotherZone);",
    "        ",
    "        SimpleDateFormat sdf = new SimpleDateFormat(pattern);",
    "        sdf.setTimeZone(anotherZone);",
    "        String expectedValue = sdf.format(cal.getTime());",
    "        String actualValue = FastDateFormat.getInstance(pattern).format(cal);",
    "        assertEquals(expectedValue, actualValue);",
    "    }"
  ]
}
------------
2:0
Add ImportStatement.

{
  "relativeFilePath": "src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java",
  "startLine": 18,
  "endLine": 17,
  "version": "BASE",
  "contentType": "EMPTY",
  "codeSnippet": []
}
{
  "relativeFilePath": "src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java",
  "startLine": 19,
  "endLine": 19,
  "version": "CURRENT",
  "contentType": "IMPORT",
  "codeSnippet": [
    "import static org.junit.Assert.assertNotNull;"
  ]
}
------------
1:0
Update FieldDeclaration "mTimeZone" To: "mLocale".

{
  "relativeFilePath": "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java",
  "startLine": 1096,
  "endLine": 1096,
  "version": "BASE",
  "contentType": "CODE",
  "codeSnippet": [
    "        private final TimeZone mTimeZone;"
  ]
}
{
  "relativeFilePath": "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java",
  "startLine": 1096,
  "endLine": 1097,
  "version": "CURRENT",
  "contentType": "CODE",
  "codeSnippet": [
    "        private final Locale mLocale;",
    "        private final int mStyle;"
  ]
}
------------
1:3
Update InfixExpression To VariableDeclarationStatement: "zone".
Update MethodInvocation To InfixExpression.

{
  "relativeFilePath": "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java",
  "startLine": 1127,
  "endLine": 1128,
  "version": "BASE",
  "contentType": "CODE",
  "codeSnippet": [
    "            if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {",
    "                buffer.append(mDaylight);"
  ]
}
{
  "relativeFilePath": "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java",
  "startLine": 1132,
  "endLine": 1135,
  "version": "CURRENT",
  "contentType": "CODE",
  "codeSnippet": [
    "            TimeZone zone = calendar.getTimeZone();",
    "            if (zone.useDaylightTime()",
    "                    && calendar.get(Calendar.DST_OFFSET) != 0) {",
    "                buffer.append(getTimeZoneDisplay(zone, true, mStyle, mLocale));"
  ]
}
------------
1:2
Add Comment.

{
  "relativeFilePath": "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java",
  "startLine": 1118,
  "endLine": 1117,
  "version": "BASE",
  "contentType": "EMPTY",
  "codeSnippet": []
}
{
  "relativeFilePath": "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java",
  "startLine": 1121,
  "endLine": 1123,
  "version": "CURRENT",
  "contentType": "COMMENT",
  "codeSnippet": [
    "            // We have no access to the Calendar object that will be passed to",
    "            // appendTo so base estimate on the TimeZone passed to the",
    "            // constructor"
  ]
}
------------
1:1
Update ExpressionStatement "mTimeZone=timeZone;" To: "mLocale=locale;".

{
  "relativeFilePath": "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java",
  "startLine": 1108,
  "endLine": 1109,
  "version": "BASE",
  "contentType": "CODE",
  "codeSnippet": [
    "            mTimeZone = timeZone;",
    ""
  ]
}
{
  "relativeFilePath": "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java",
  "startLine": 1109,
  "endLine": 1111,
  "version": "CURRENT",
  "contentType": "CODE",
  "codeSnippet": [
    "            mLocale = locale;",
    "            mStyle = style;",
    "            "
  ]
}
