{
  "repoID": "65418271",
  "repoName": "Csv_8",
  "fileID": "c149dedf2db444a49fa96bc8bba81258",
  "index": 1,
  "status": "MODIFIED",
  "fileType": "JAVA",
  "baseRelativePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
  "currentRelativePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
  "baseContent": "",
  "currentContent": "",
  "description": "modified",
  "diffHunksMap": {
    "1c82a07b413048f689d9c9af6f50a00c": {
      "repoID": "65418271",
      "repoName": "Csv_8",
      "fileID": "c149dedf2db444a49fa96bc8bba81258",
      "diffHunkID": "1c82a07b413048f689d9c9af6f50a00c",
      "fileIndex": 1,
      "index": 2,
      "baseHunk": {
        "relativeFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
        "startLine": 661,
        "endLine": 667,
        "version": "BASE",
        "contentType": "CODE",
        "codeSnippet": [
          "        if (header != null) {",
          "            final Set<String> set = new HashSet<String>(header.length);",
          "            set.addAll(Arrays.asList(header));",
          "            if (set.size() != header.length) {",
          "                throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));",
          "            }",
          "        }"
        ]
      },
      "currentHunk": {
        "relativeFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
        "startLine": 670,
        "endLine": 669,
        "version": "CURRENT",
        "contentType": "EMPTY",
        "codeSnippet": []
      },
      "fileType": "JAVA",
      "changeType": "DELETED",
      "description": "Delete InfixExpression.\nDelete VariableDeclarationStatement \"set\".\nDelete ExpressionStatement \"set.addAll(Arrays.asList(header));\".\nDelete IfStatement.\n",
      "rawDiffs": [
        "@@ -661,7 +670,0 @@ public final class CSVFormat implements Serializable {",
        "-        if (header != null) {",
        "-            final Set<String> set = new HashSet<String>(header.length);",
        "-            set.addAll(Arrays.asList(header));",
        "-            if (set.size() != header.length) {",
        "-                throw new IllegalStateException(\"The header contains duplicate names: \" + Arrays.toString(header));",
        "-            }",
        "-        }"
      ]
    },
    "22c2964cb3914119ada151aae3667a87": {
      "repoID": "65418271",
      "repoName": "Csv_8",
      "fileID": "c149dedf2db444a49fa96bc8bba81258",
      "diffHunkID": "22c2964cb3914119ada151aae3667a87",
      "fileIndex": 1,
      "index": 0,
      "baseHunk": {
        "relativeFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
        "startLine": 158,
        "endLine": 158,
        "version": "BASE",
        "contentType": "CODE",
        "codeSnippet": [
          "    private final String[] header;"
        ]
      },
      "currentHunk": {
        "relativeFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
        "startLine": 158,
        "endLine": 158,
        "version": "CURRENT",
        "contentType": "CODE",
        "codeSnippet": [
          "    private final String[] header; // array of header column names"
        ]
      },
      "fileType": "JAVA",
      "changeType": "MODIFIED",
      "description": "Update FieldDeclaration \"header\".\n",
      "rawDiffs": [
        "@@ -158 +158 @@ public final class CSVFormat implements Serializable {",
        "-    private final String[] header;",
        "+    private final String[] header; // array of header column names"
      ]
    },
    "f8e9d110b05442839d56f3bc2adb6d6c": {
      "repoID": "65418271",
      "repoName": "Csv_8",
      "fileID": "c149dedf2db444a49fa96bc8bba81258",
      "diffHunkID": "f8e9d110b05442839d56f3bc2adb6d6c",
      "fileIndex": 1,
      "index": 1,
      "baseHunk": {
        "relativeFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
        "startLine": 313,
        "endLine": 313,
        "version": "BASE",
        "contentType": "CODE",
        "codeSnippet": [
          "        this.header = header == null ? null : header.clone();"
        ]
      },
      "currentHunk": {
        "relativeFilePath": "src/main/java/org/apache/commons/csv/CSVFormat.java",
        "startLine": 313,
        "endLine": 323,
        "version": "CURRENT",
        "contentType": "CODE",
        "codeSnippet": [
          "        if (header == null) {",
          "        \tthis.header = null;",
          "        } else {",
          "        \tSet<String> dupCheck = new HashSet<String>();",
          "        \tfor(String hdr : header) {",
          "        \t\tif (!dupCheck.add(hdr)) {",
          "        \t\t\tthrow new IllegalArgumentException(\"The header contains a duplicate entry: '\" + hdr + \"' in \" + Arrays.toString(header));",
          "        \t\t}",
          "        \t}",
          "            this.header = header.clone();        \t",
          "        }"
        ]
      },
      "fileType": "JAVA",
      "changeType": "MODIFIED",
      "description": "Update Assignment To InfixExpression.\n",
      "rawDiffs": [
        "@@ -313 +313,11 @@ public final class CSVFormat implements Serializable {",
        "-        this.header = header == null ? null : header.clone();",
        "+        if (header == null) {",
        "+        \tthis.header = null;",
        "+        } else {",
        "+        \tSet<String> dupCheck = new HashSet<String>();",
        "+        \tfor(String hdr : header) {",
        "+        \t\tif (!dupCheck.add(hdr)) {",
        "+        \t\t\tthrow new IllegalArgumentException(\"The header contains a duplicate entry: '\" + hdr + \"' in \" + Arrays.toString(header));",
        "+        \t\t}",
        "+        \t}",
        "+            this.header = header.clone();        \t",
        "+        }"
      ]
    }
  },
  "rawHeaders": [
    "diff --git a/src/main/java/org/apache/commons/csv/CSVFormat.java b/src/main/java/org/apache/commons/csv/CSVFormat.java",
    "index a553dfa..772aaf0 100644",
    "--- a/src/main/java/org/apache/commons/csv/CSVFormat.java",
    "+++ b/src/main/java/org/apache/commons/csv/CSVFormat.java"
  ]
}