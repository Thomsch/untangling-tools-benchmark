#!/bin/bash
# Untangle with SmartCommit and Flexeme.
# - $1: D4J Project name
# - $2: D4J Bug id
# - $3: Path to the checked out project repository
# - $4: The path where to output the results

# The decomposition results are written to ~/decomposition/<D4J bug> subfolder.
# - flexeme/flexeme.dot: The PDG (untangling graph) generated by Flexeme
# - flexeme/time.csv: Run time allocated for untangling by Flexeme
# - smartcommit/diffs: JSON files storing SmartCommit hunk-based decomposition results

set -o errexit    # Exit immediately if a command exits with a non-zero status
set -o nounset    # Exit if script tries to use an uninitialized variable
set -o pipefail   # Produce a failure status if any command in the pipeline fails

if [[ $# -ne 5 ]] ; then
    echo 'usage: evaluate.sh <D4J Project> <D4J Bug id> <out_dir> <repo_root>'
    echo 'example: evaluate.sh Lang 1 out/ repositories/'
    exit 1
fi

project=$1
vid=$2
out_path=$3 # Path where the results are stored.
repo_root=$4 # Path where the repo is checked out
repository=$5 # Path to checked out D4J bug
workdir="${repo_root}/${project}_${vid}"

set -o allexport
# shellcheck source=/dev/null
source .env
set +o allexport

if [[ -z "${JAVA_11}" ]]; then
  echo 'JAVA_11 environment variable is not set.'
  echo 'Please set it to the path of a Java 11 java.'
  exit 1
fi

decomposition_path="${out_path}/decomposition" # Path containing the decomposition results.
evaluation_path="${out_path}/evaluation/${project}_${vid}" # Path containing the evaluation results. i.e., ground
# truth, decompositions in CSV format.

commit=$(defects4j info -p "$project" -b "$vid" | grep -A1 "Revision ID" | tail -n 1)
# Get source path and class path
sourcepath=$(defects4j export -p dir.src.classes -w "${workdir}")
sourcepath="${sourcepath}:$(defects4j export -p dir.src.tests -w "${workdir}")"
classpath=$(defects4j export -p cp.compile -w "${workdir}")
classpath="${classpath}:$(defects4j export -p cp.test -w "${workdir}")"

mkdir -p "${evaluation_path}"
mkdir -p "${decomposition_path}"

echo -ne '\n'
echo -ne 'Untangling with SmartCommit ...............................................\r'
smartcommit_untangling_path="${out_path}/decomposition/smartcommit"
smartcommit_untangling_results="${smartcommit_untangling_path}/${project}_${vid}/${commit}"

#
# Untangle with SmartCommit
#
if [[ -d "$smartcommit_untangling_results" ]]; then
    echo -ne 'Untangling with SmartCommit ............................................. CACHED\r'
    regenerate_results=false
else
    echo -ne '\n'
    START_DECOMPOSITION=$(date +%s.%N)
    $JAVA_11 -jar bin/smartcommitcore-1.0-all.jar -r "$workdir" -c "$commit" -o "$smartcommit_untangling_path"
    END_DECOMPOSITION=$(date +%s.%N)
    DIFF_DECOMPOSITION=$(echo "$END_DECOMPOSITION - $START_DECOMPOSITION" | bc)
    echo "${project},${vid},smartcommit,${DIFF_DECOMPOSITION}" > "${smartcommit_untangling_results}/time.csv"
    echo -ne 'Untangling with SmartCommit ............................................... OK'
    regenerate_results=true
fi


#
# Untangle with Flexeme
#
echo -ne '\n'
echo -ne 'Untangling with Flexeme ...............................................\r'

flexeme_untangling_path="${decomposition_path}/flexeme"
flexeme_untangling_results="${flexeme_untangling_path}/${project}_${vid}"
flexeme_untangling_graph="${flexeme_untangling_results}/flexeme.dot"

if [[ -f "$flexeme_untangling_graph" ]]; then
    echo -ne 'Untangling with Flexeme ................................................. CACHED\r'
    regenerate_results=false
else
    echo -ne '\n'
    mkdir -p "$flexeme_untangling_results"
    START_DECOMPOSITION=$(date +%s.%N)
    ./src/bash/main/untangle_flexeme.sh "$workdir" "$commit" "$sourcepath" "$classpath" "${flexeme_untangling_graph}"
    flexeme_untangling_code=$?
    if [ $flexeme_untangling_code -eq 0 ]
    then
        echo -ne 'Untangling with Flexeme ................................................... OK'
        regenerate_results=true
    else
        echo -ne 'Untangling with Flexeme ................................................. FAIL'
        regenerate_results=false
    fi
    END_DECOMPOSITION=$(date +%s.%N)
    DIFF_DECOMPOSITION=$(echo "$END_DECOMPOSITION - $START_DECOMPOSITION" | bc)
    echo "${project},${vid},flexeme,${DIFF_DECOMPOSITION}" > "${flexeme_untangling_results}/time.csv"

fi
echo -ne '\n'